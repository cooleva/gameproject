
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;

/**
 * Class GameRunner - write a description of the class here
 * 
 * @author (your name) 
 * @version (a version number)
 */
public class GameRunner extends JApplet implements KeyListener
{
    // instance variables - replace the example below with your own
    Map map;
    GameGUI gui = new GameGUI();
    Wizard wiz = new Wizard();

    /**
     * Called by the browser or applet viewer to inform this JApplet that it
     * has been loaded into the system. It is always called before the first 
     * time that the start method is called.
     */
    public void init()
    {
        setFocusable(true);
        setFocusTraversalKeysEnabled(false);
    
        // provide any initialisation necessary for your JApplet
    }

    /**
     * Called by the browser or applet viewer to inform this JApplet that it 
     * should start its execution. It is called after the init method and 
     * each time the JApplet is revisited in a Web page. 
     */
    public void start()
    {
        map = gui.mazeMap();
        
        addKeyListener (this);
    }

    /** 
     * Called by the browser or applet viewer to inform this JApplet that
     * it should stop its execution. It is called when the Web page that
     * contains this JApplet has been replaced by another page, and also
     * just before the JApplet is to be destroyed. 
     */
    public void stop()
    {
        // provide any code that needs to be run when page
        // is replaced by another page or before JApplet is destroyed 
    }

    /**
     * Paint method for applet.
     * 
     * @param  g   the Graphics object for this applet
     */
    public void paint(Graphics g)
    {
        map.draw(g);
        wiz.draw(g);
    }

    /**
     * Called by the browser or applet viewer to inform this JApplet that it
     * is being reclaimed and that it should destroy any resources that it
     * has allocated. The stop method will always be called before destroy. 
     */
    public void destroy()
    {
        // provide code to be run when JApplet is about to be destroyed.
    }
     public void keyPressed(KeyEvent e){
    if (e.getKeyCode() == KeyEvent.VK_UP) 
    {
        wiz.move(map,'u');
        repaint();
    }
    if (e.getKeyCode() == KeyEvent.VK_DOWN) 
    {
        wiz.move(map,'d');
        repaint();
    }
    if (e.getKeyCode() == KeyEvent.VK_LEFT) 
    {
        wiz.move(map,'l');
        repaint();
    }
    if (e.getKeyCode() == KeyEvent.VK_RIGHT) 
    {
        wiz.move(map,'r');
        repaint();
    }
  }
public void keyReleased(KeyEvent e){}
  public void keyTyped(KeyEvent e){}

}
